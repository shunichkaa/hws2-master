{"version":3,"sources":["s2-homeworks/hw01/message/Message.module.css","s2-homeworks/hw01/friend-message/FriendMessage.module.css","s1-main/App.module.css","s2-homeworks/hw01/message-sender/MessageSender.module.css","s2-homeworks/hw01/avatar.png","s2-homeworks/hw01/message/Message.tsx","s2-homeworks/hw01/message-sender/MessageSender.tsx","s2-homeworks/hw01/friend-message/FriendMessage.tsx","s2-homeworks/hw01/HW1.tsx","s1-main/App.tsx","index.tsx"],"names":["module","exports","message","imageAndText","text","name","messageText","time","friendMessage","friendImageAndText","friendText","friendName","friendTime","friendMessageText","App","hw","hwTitle","sendForm","textarea","button","__webpack_require__","p","Message","_ref","id","user","messageContent","avatar","React","createElement","concat","className","s","src","alt","CONFIG","SEND","key","requireShift","MessageSender","M","initialUser","textareaRef","useRef","messages","setMessages","useState","setMessageText","useEffect","current","style","height","scrollHeight","handleSendMessage","trim","prevMessages","length","Date","toTimeString","slice","setTimeout","Fragment","map","ref","title","placeholder","value","onChange","e","currentTarget","onKeyDown","shiftKey","preventDefault","onClick","FriendMessage","INITIAL_CHAT_STATE","friend","HW1","s2","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.33a42b03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1KypJ\",\"imageAndText\":\"Message_imageAndText__1E160\",\"text\":\"Message_text__BjzyZ\",\"name\":\"Message_name__2cCsl\",\"messageText\":\"Message_messageText__3A44M\",\"time\":\"Message_time__HrlJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendMessage\":\"FriendMessage_friendMessage__2nN3u\",\"friendImageAndText\":\"FriendMessage_friendImageAndText__1LWkb\",\"friendText\":\"FriendMessage_friendText__3xXBI\",\"friendName\":\"FriendMessage_friendName__3xWBn\",\"friendTime\":\"FriendMessage_friendTime__tOb0F\",\"friendMessageText\":\"FriendMessage_friendMessageText__1In6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__O_AFa\",\"hw\":\"App_hw__14GoH\",\"hwTitle\":\"App_hwTitle__1y94L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendForm\":\"MessageSender_sendForm__3Qt0i\",\"textarea\":\"MessageSender_textarea__3LAyX\",\"button\":\"MessageSender_button__28nQU\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.0f8da672.png\";","import React from 'react'\nimport s from './Message.module.css'\n\ntype UserType = {\n    avatar: string\n    name: string\n}\n\ntype MessageContentType = {\n    text: string\n    time: string\n}\n\nexport type MessageType = {\n    id: number\n    user: UserType\n    message: MessageContentType\n}\n\nexport type MessagePropsType = {\n    message: MessageType\n}\n\nconst Message: React.FC<MessagePropsType> = ({ message }) => {\n    const { id, user, message: messageContent } = message\n    const { avatar, name } = user\n    const { text, time } = messageContent\n\n    return (\n        <div id={`hw1-message-${id}`} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={`hw1-avatar-${id}`}\n                    src={avatar}\n                    alt={`${name}'s avatar`}\n                />\n                <div className={s.text}>\n                    <div id={`hw1-name-${id}`} className={s.name}>\n                        {name}\n                    </div>\n                    <pre id={`hw1-text-${id}`} className={s.messageText}>\n                        {text}\n                    </pre>\n                </div>\n            </div>\n            <div id={`hw1-time-${id}`} className={s.time}>\n                {time}\n            </div>\n        </div>\n    )\n}\n\nexport default Message","import React, { useEffect, useRef, useState } from 'react';\nimport s from './MessageSender.module.css';\n\ninterface MessageData {\n    text: string;\n    time: string;\n}\n\ninterface User {\n    avatar: string;\n    name: string;\n}\n\nexport interface Message {\n    id: number;\n    user: User;\n    message: MessageData;\n}\n\ninterface MessageSenderProps {\n    M: React.ComponentType<{ message: Message }>;\n    initialUser: User;\n}\n\nconst CONFIG = {\n    CLEAR_TIMEOUT_MS: 4,\n    KEYBOARD_SHORTCUTS: {\n        SEND: {\n            key: 'Enter',\n            requireShift: true\n        }\n    }\n} as const;\n\nconst MessageSender: React.FC<MessageSenderProps> = ({ M, initialUser }) => {\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [messageText, setMessageText] = useState('');\n\n    const getCurrentTime = () => new Date().toTimeString().slice(0, 5);\n\n    const createNewMessage = (): Message => ({\n        id: messages.length ? messages.length + 1 : 1,\n        user: initialUser,\n        message: {\n            text: messageText,\n            time: getCurrentTime(),\n        },\n    });\n\n    const adjustTextareaHeight = () => {\n        if (textareaRef.current) {\n            textareaRef.current.style.height = '0px';\n            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n        }\n    };\n\n    useEffect(() => {\n        adjustTextareaHeight();\n    }, [messageText]);\n\n    const handleSendMessage = () => {\n        const trimmedMessage = messageText.trim();\n        if (!trimmedMessage) return;\n\n        setMessages(prevMessages => [...prevMessages, createNewMessage()]);\n        setTimeout(() => setMessageText(''), CONFIG.CLEAR_TIMEOUT_MS);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n        const { SEND } = CONFIG.KEYBOARD_SHORTCUTS;\n        if (e.key === SEND.key && e.shiftKey === SEND.requireShift) {\n            e.preventDefault();\n            handleSendMessage();\n        }\n    };\n\n    return (\n        <>\n            {messages.map((message) => (\n                <M key={`message-${message.id}`} message={message} />\n            ))}\n            <div id={'hw1-send-message-form'} className={s.sendForm}>\n                <textarea\n                    id={'hw1-textarea'}\n                    className={s.textarea}\n                    ref={textareaRef}\n                    title={'Shift+Enter for send'}\n                    placeholder={'Type your message'}\n                    value={messageText}\n                    onChange={(e) => setMessageText(e.currentTarget.value)}\n                    onKeyDown={handleKeyDown}\n                />\n                <button\n                    id={'hw1-button'}\n                    className={s.button}\n                    onClick={handleSendMessage}\n                >\n                    Send\n                </button>\n            </div>\n        </>\n    );\n};\n\nexport default MessageSender;","import React from 'react'\nimport s from './FriendMessage.module.css'\n\ntype UserType = {\n    avatar: string\n    name: string\n}\n\ntype MessageContentType = {\n    text: string\n    time: string\n}\n\nexport type FriendMessageType = {\n    id: number\n    user: UserType\n    message: MessageContentType\n}\n\nexport type FriendMessagePropsType = {\n    message: FriendMessageType\n}\n\nconst FriendMessage: React.FC<FriendMessagePropsType> = ({ message }) => {\n    const { id, user, message: messageContent } = message\n    const { avatar, name } = user\n    const { text, time } = messageContent\n\n    return (\n        <div id={'hw1-friend-message-' + id} className={s.friendMessage}>\n            <div className={s.friendImageAndText}>\n                <img\n                    id={'hw1-friend-avatar-' + id}\n                    src={avatar}\n                    alt={`${name}'s avatar`}\n                />\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + id}\n                        className={s.friendName}\n                    >\n                        {name}\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + id}\n                        className={s.friendMessageText}\n                    >\n                        {text}\n                    </pre>\n                </div>\n            </div>\n            <div\n                id={'hw1-friend-time-' + id}\n                className={s.friendTime}\n            >\n                {time}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage","import React from 'react';\nimport Message from './message/Message';\nimport MessageSender from './message-sender/MessageSender';\nimport s2 from '../../s1-main/App.module.css';\nimport FriendMessage from './friend-message/FriendMessage';\nimport avatar from './avatar.png';\n\nconst INITIAL_CHAT_STATE = {\n    messages: {\n        user: {\n            id: 0,\n            user: {\n                avatar,\n                name: 'Some Name',\n            },\n            message: {\n                text: 'some textsome textsome textsome textsome textsome textsome text',\n                time: '22:00',\n            },\n        },\n        friend: {\n            id: 100,\n            user: {\n                avatar,\n                name: 'Friend Name',\n            },\n            message: {\n                text: 'зеркальное сообщение для тренировки css',\n                time: '22:00',\n            },\n        },\n    },\n} as const;\n\nconst HW1: React.FC = () => {\n    const { messages } = INITIAL_CHAT_STATE;\n\n    return (\n        <div id=\"hw1\">\n            <div className={s2.hwTitle}>Homework #1</div>\n            <div className={s2.hw}>\n                <div>\n                    <Message message={messages.user} />\n                    <FriendMessage message={messages.friend} />\n                </div>\n                <MessageSender\n                    M={Message}\n                    initialUser={messages.user.user}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default HW1;","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../s2-homeworks/hw01/HW1'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <HW1 />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './s1-main/App';\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);"],"sourceRoot":""}